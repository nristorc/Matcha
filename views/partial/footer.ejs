</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>

<script type="text/javascript" src="/js/search.js"></script>
<script src="/js/newMessage.js"></script>

<!--NOTIFICATIONS-->
<script>

</script>

<script src="/socket.io/socket.io.js"></script>

<script>

    var token = document.getElementById('token').dataset.token;
    function decodeToken(token){
        var playload = JSON.parse(atob(token.split('.')[1]));
        return playload;

    }
    var user = decodeToken(token);

    function readNotif(user) {
        const formData = {
            'userId': user,
            'submit': 'notifRead'
        }
        $.ajax({
            type		: 'POST',
            url         : '/notifications',
            data		: formData,
            dataType	: 'json',
            encode		: true
        })
    }

    var unreadAll = 0;

    const msgNotif = () => {
        iceToast.setPosition('top-right');
        iceToast.setColor('pink','#05728f');
        iceToast.push({
            words: ' Vous avez reçu un nouveau message',
            bgcolor: 'pink',
            time: 5000
        });
    }
    const likeNotif = (username, id) => {
        iceToast.setPosition('top-right');
        iceToast.setColor('blue','#05728f');
        iceToast.push({
            words: '<a href="/user/' + id + '" style="color: white !important;">' + username + ' vient de vous liker</a>',
            bgcolor: 'blue',
            time: 5000
        });
    }
    const matchNotif = (username, id) => {
        iceToast.setPosition('top-right');
        iceToast.setColor('blue','#05728f');
        iceToast.push({
            words: '<a href="/user/' + id + '" style="color: white !important;">Vous avez un nouveau match avec ' + username +' !</a>',
            bgcolor: 'blue',
            time: 5000
        });
    }
    const unlikeNotif = (username, id) => {
        iceToast.setPosition('top-right');
        iceToast.setColor('blue','#05728f');
        iceToast.push({
            words: '<a href="/user/' + id + '" style="color: white !important;">' + username + ' ne vous like plus...</a>',
            bgcolor: 'blue',
            time: 5000
        });
    }
    const unmatchNotif = (username, id) => {
        iceToast.setPosition('top-right');
        iceToast.setColor('blue','#05728f');
        iceToast.push({
            words: '<a href="/user/' + id + '" style="color: white !important;">Vous venez de perdre votre match avec ' + username +' !</a>',
            bgcolor: 'blue',
            time: 5000
        });
    }
    const visitNotif = () => {
        iceToast.setPosition('top-right');
        iceToast.setColor('blue','#05728f');
        iceToast.push({
            words: 'Un utilisateur a visité votre profil !',
            bgcolor: 'blue',
            time: 5000
        });
    }

    const incrementMsg = () => {
        unreadAll++;
        var header = document.getElementById('headerMsg');
        if (unreadAll !== 0) {
            header.innerText = 'Messagerie (' + unreadAll + ')';
        }
    }
    const decrementMsg = (messages = 1) => {
        unreadAll -= messages;
        var header = document.getElementById('headerMsg');
        if (unreadAll !== 0) {
            header.innerText = 'Messagerie (' + unreadAll + ')';
        } else {
            header.innerText = 'Messagerie';
        }
    }

    const incrementMsgMatch = (messages) => {
        unreadAll += messages;
        var header = document.getElementById('headerMsg');
        if (unreadAll !== 0) {
            header.innerText = 'Messagerie (' + unreadAll + ')';
        } else {
            header.innerText = 'Messagerie';
        }
    }

    let socket = io('http://localhost:3000');
    socket.on('connect', () => {
        socket.emit('identify', {
            token: document.getElementById('token').dataset.token
        });
    });


    /* ONLINE USER */

    var chatOnline = document.querySelector('#chatOnline');
    var histoOnline = document.querySelector('.histoOnline');
    var searchOnline = document.querySelector('#searchOnline');
    var userOnline = document.querySelector('#userDetails .fa-circle');
    var userOffline = document.querySelector('.lastConnected');
    var checkOnline = document.querySelector('#checkOnline');
    var userDetails = document.querySelector('#userDetails');


    const onlineUserPage = (user) => {
        userOnline = document.querySelector('#userDetails .fa-circle');
        userOffline = document.querySelector('.lastConnected');
        checkOnline = document.querySelector('#checkOnline');
         if (userOffline) {
             userOffline.remove();
         }
        if (userOnline === null) {
            const i = document.createElement('i');
            i.setAttribute('class', 'fas fa-circle fa-xs');
            i.setAttribute('style', 'color: green;');
            userDetails.prepend(i);
        }
        userOffline = document.querySelector('.lastConnected');
        userOnline = document.querySelector('#userDetails .fa-circle');
    }
    const offlineUserPage = (user) => {
        userOnline = document.querySelector('#userDetails .fa-circle');
        userOffline = document.querySelector('.lastConnected');
        checkOnline = document.querySelector('#checkOnline');
        if (userOnline) {
            userOnline.remove();
        }
        const p = document.createElement('p');
        p.setAttribute('class', 'lastConnected');
        p.setAttribute('style', 'margin-bottom: 10px; padding: 0; font-size: 12px;');
        const options = { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };
        p.innerText = 'dernière connexion le : ' + new Date().toLocaleDateString('fr-FR', options);
        checkOnline.appendChild(p);
        userOnline = document.querySelector('#userDetails .fa-circle');
        userOffline = document.querySelector('.lastConnected');
    }


        if (checkOnline) {

            socket.on('users.new', ({user}) => {
                onlineUserPage(user);
            });

            socket.on('users.leave', ({user}) => {
                offlineUserPage(user);
            })
        }



    const onlineChatPage = (user) => {
        chatOnline = document.querySelector('#chatOnline');
        if (user && document.querySelector('#chatOnline .user' + user.id)) {
            if (document.querySelector('#chatOnline .user' + user.id).style.color === 'red') {
                document.querySelector('#chatOnline .user' + user.id).setAttribute('style', 'color: green;');
            }
        }
    }
    const offlineChatPage = (user) => {
        chatOnline = document.querySelector('#chatOnline');
        if (user && document.querySelector('#chatOnline .user' + user.id)) {
            if (document.querySelector('#chatOnline .user' + user.id).style.color === 'green') {
                document.querySelector('#chatOnline .user' + user.id).setAttribute('style', 'color: red;');
            }
        }
    }
    if (chatOnline) {
        socket.on('users.new', ({user}) => {
            onlineChatPage(user);
        });

        socket.on('users.leave', ({user}) => {
            offlineChatPage(user);
        })
    }

    const onlineHistoPage = (user) => {
        histoOnline = document.querySelector('.histoOnline');
        if (user && document.querySelector('.histoOnline .user' + user.id)) {
            if (document.querySelector('.histoOnline .user' + user.id).style.color === 'red') {
                document.querySelector('.histoOnline .user' + user.id).setAttribute('style', 'color: green;');
            }
        }
    }
    const offlineHistoPage = (user) => {
        histoOnline = document.querySelector('.histoOnline');
        if (user && document.querySelector('.histoOnline .user' + user.id)) {
            if (document.querySelector('.histoOnline .user' + user.id).style.color === 'green') {
                document.querySelector('.histoOnline .user' + user.id).setAttribute('style', 'color: red;');
            }
        }
    }
    if (histoOnline) {
        socket.on('users.new', ({user}) => {
            onlineHistoPage(user);
        });

        socket.on('users.leave', ({user}) => {
            offlineHistoPage(user);
        })
    }

    const onlineSearchPage = (user) => {
        searchOnline = document.querySelector('#searchOnline');
        if (user && document.querySelector('#searchOnline .user' + user.id)) {
            if (document.querySelector('#searchOnline .user' + user.id).style.color === 'red') {
                document.querySelector('#searchOnline .user' + user.id).setAttribute('style', 'color: green;');
            }
        }
    }
    const offlineSearchPage = (user) => {
        searchOnline = document.querySelector('#searchOnline');
        if (user && document.querySelector('#searchOnline .user' + user.id)) {
            if (document.querySelector('#searchOnline .user' + user.id).style.color === 'green') {
                document.querySelector('#searchOnline .user' + user.id).setAttribute('style', 'color: red;');
            }
        }
    }
    if (searchOnline) {

        socket.on('users.new', ({user}) => {
            onlineSearchPage(user);
        });

        socket.on('users.leave', ({user}) => {
            offlineSearchPage(user);
        })
    }

    /* CHAT SOCKETS */
    socket.on('allUnreadMsg', (number) => {
        var header = document.getElementById('headerMsg');
        if (number.countMsg !== 0) {
            unreadAll = number.countMsg;
            header.innerText = 'Messagerie (' + number.countMsg + ')';
        } else {
            header.innerText = 'Messagerie';
        }
    });

    var msgForm = document.getElementById('send-message');
    if (msgForm) {
        msgForm.onsubmit = (e) => {
            e.preventDefault();
            var inputMessage = document.getElementById('write_msg');
            var toUser = document.getElementById('hiddenInput').value;
            socket.emit('newMsg', {message: inputMessage.value.trim(),
                fromUser: user.id,
                toUser: parseInt(toUser)
            });
            inputMessage.value = '';
            inputMessage.focus();
        }

        socket.on('sendingMessage', (msg) => {
            var inputHidden = document.getElementById('hiddenInput')
            var user = document.querySelector('#chatOnline .user' + msg.msg.fromUser);
                if(inputHidden == null) {
                    msgNotif();
                    incrementMsg();
                    var unread = document.getElementById('unreadMsg' + msg.msg.fromUser);
                    var count = unread;
                    if (count) {
                        count = count.innerText.split(' ');
                        count = count[0];
                        count = parseInt(count);
                        count++;
                        unread.innerText = count + ' message(s) non lu';
                    }
                    else {
                        var notRead = document.createElement('p');
                        notRead.id = 'unreadMsg' + msg.msg.fromUser;
                        notRead.innerText = '1 message(s) non lu';
                        user.insertAdjacentElement('afterend', notRead);
                    }
                    return

                } else if (inputHidden && (parseInt(inputHidden.value) !== msg.msg.fromUser)) {
                    if (user) {
                        msgNotif();
                        incrementMsg();
                        var unread2 = document.getElementById('unreadMsg' + msg.msg.fromUser);
                        var count2 = unread2;
                        if (count2) {
                            count2 = count2.innerText.split(' ');
                            count2 = count2[0];
                            count2 = parseInt(count2);
                            count2++;
                            unread2.innerText = count2 + ' message(s) non lu';
                        }
                        else {
                            var notRead2 = document.createElement('p');
                            notRead2.id = 'unreadMsg' + msg.msg.fromUser;
                            notRead2.innerText = '1 message(s) non lu';
                            user.insertAdjacentElement('afterend', notRead2);
                        }
                        return
                    }
                }
            inputHidden  = inputHidden.value;
            const chat = document.querySelector('.msg_history');
            const noMessage = document.getElementById('noMessage');
            const options = { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric' };

            if (noMessage) {
                noMessage.remove();
            }
                if (parseInt(document.getElementById('hiddenInput').value) === msg.msg.toUser) {
                    chat.removeAttribute('style', 'text-align: center;');
                    const outgoing = document.createElement('div');
                    outgoing.setAttribute('class', 'outgoing_msg');
                    const sentMsg = document.createElement('div');
                    sentMsg.setAttribute('class', 'sent_msg');
                    const p = document.createElement('p');
                    p.innerText = msg.msg.message;
                    const span = document.createElement('span');
                    span.setAttribute('class', 'time_date')
                    span.innerText = new Date(msg.date).toLocaleDateString('fr-FR', options);
                    sentMsg.append(p);
                    sentMsg.append(span);
                    outgoing.append(sentMsg);
                    chat.append(outgoing);
                }
                else if (parseInt(document.getElementById('hiddenInput').value) === msg.msg.fromUser) {
                    chat.removeAttribute('style', 'text-align: center;');
                    const incoming = document.createElement('div');
                    incoming.setAttribute('class', 'incoming_msg');
                    const receivedMsg = document.createElement('div');
                    receivedMsg.setAttribute('class', 'received_msg');
                    const receivedMsgWith = document.createElement('div');
                    receivedMsgWith.setAttribute('class', 'received_withd_msg');
                    const p = document.createElement('p');
                    p.innerText = msg.msg.message;
                    const span = document.createElement('span');
                    span.setAttribute('class', 'time_date')
                    span.innerText = new Date(msg.date).toLocaleDateString('fr-FR', options);
                    receivedMsgWith.append(p);
                    receivedMsgWith.append(span);
                    receivedMsg.append(receivedMsgWith);
                    incoming.append(receivedMsg);
                    chat.append(incoming);
                    socket.emit('readMsg', msg);
                }
                setTimeout(() => {
                    chat.scrollTop = chat.scrollHeight + 500;
                }, 10);

        });

        socket.on('blockMessage', (msg) => {
            var inputHidden = document.getElementById('hiddenInput')
            if(inputHidden == null)
                return
            inputHidden  = inputHidden.value;
            const chat = document.querySelector('.msg_history');
            const noMessage = document.getElementById('noMessage');
            const options = { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric' };

            if (document.getElementById('blockedMsg')) {
                document.getElementById('blockedMsg').remove();
            }

            if (noMessage) {
                noMessage.remove();
            }

            const bloc = document.createElement('p');
            bloc.innerText = msg.msg;
            bloc.id = 'blockedMsg';
            chat.append(bloc);
            setTimeout(() => {
                chat.scrollTop = chat.scrollHeight + 500;
            }, 10);
        })
    } else {
        socket.on('sendingMessage', (msg) => {
            msgNotif();
            incrementMsg();
        });
    }

    /* NOTIFICATIONS */

    var unreadNotifAll = 0;

    const incrementNotif = () => {
        unreadNotifAll++;
        var header = document.getElementById('headerNotif');
        if (unreadNotifAll !== 0) {
            header.innerText = 'Notifications (' + unreadNotifAll + ')';
        }
    }

    socket.on('allUnreadNotif', (number) => {
        var header = document.getElementById('headerNotif');
        if (number.countNotif !== 0) {
            unreadNotifAll = number.countNotif;
            header.innerText = 'Notifications (' + number.countNotif + ')';
        } else {
            header.innerText = 'Notifications';
        }
    });

    socket.on('visit', () => {
        incrementNotif();
        visitNotif();
    });

    socket.on('likeMatch', (info) => {
        incrementNotif();
        likeNotif(info.me[0].username, info.me[0].id);

        if (document.getElementById('checkOnline')) {
            const getDetails = ' ' + info.me[0].username + ' (' + info.me[0].firstname + ' ' + info.me[0].lastname + ')';
            if (document.getElementById('userDetails').innerText === getDetails){
                if ($('.fa-thumbs-up')) {
                    $('.fa-thumbs-up').append('<span><i class="far fa-smile-wink" style="color: rgb(255, 0, 100); font-size: xx-large; margin-left: 10px"></i></span>');
                }
            }
        } else if (document.getElementById('pop' + info.me[0].id)) {
            if ($('.fa-thumbs-up #oklikeSearch-'+info.me[0].id)) {
                $('#liked'+info.me[0].id).show();
            }
        }
        
        if (info.messages.length !== 0) {
            var unread = 0;
            for (var k = 0; k < info.messages.length; k++) {
                if (info.messages[k].from_user_id === info.me[0].id) {
                    if (info.messages[k].unread === 1) {
                        unread++;
                    }
                }
            }
        }


        for (var n = 0; n < info.match.length; n++) {
            if (parseInt(info.like) === info.match[n]) {
                incrementNotif();
                matchNotif(info.me[0].username, info.me[0].id);
                incrementMsgMatch(unread);
                if (msgForm) {
                    const noMatch = document.querySelector('.noMatch');
                    if (noMatch) {
                        noMatch.remove();
                    }

                    var inputHidden = document.getElementById('hiddenInput');
                    if (inputHidden && parseInt(inputHidden.value) === info.me[0].id) {

                    } else {
                        const inboxMatch = document.querySelector('.inbox_chat');

                        var newMatch = '<div class="chat_list" onclick="activeChat(this,  ' + info.me[0].id + ')">' +
                            '<div class="chat_people">' +
                            '<div class="chat_img">' +
                            '<img src="' + info.me[0].profil + '" style="border-radius: 50%" alt="profil">' +
                            '</div><div class="chat_ib"><div id="chatOnline"><h5>' + info.me[0].username;
                        if (info.me[0].online === 'N') {
                            newMatch += ' <i style="color: red;" class="fas fa-circle fa-xs user' + info.me[0].id + '"></i>'
                        } else if (info.me[0].online === 'Y') {
                            newMatch += ' <i style="color: green;" class="fas fa-circle fa-xs user' + info.me[0].id + '"></i>';
                        }
                        newMatch += '</h5></div></div></div></div>';

                        inboxMatch.insertAdjacentHTML('afterbegin', newMatch);
                        if (unread !== 0) {
                            var user = document.querySelector('#chatOnline .user' + info.me[0].id);
                            var notRead = document.createElement('p');
                            notRead.id = 'unreadMsg' + info.me[0].id;
                            notRead.innerText = unread + ' message(s) non lu';
                            user.insertAdjacentElement('afterend', notRead);
                        }
                    }
                } else if (document.getElementById('checkOnline')) {
                    const getDetails = ' ' + info.me[0].username + ' (' + info.me[0].firstname + ' ' + info.me[0].lastname + ')';
                    if (document.getElementById('userDetails').innerText === getDetails){
                        if ($('.fa-smile-wink')) {
                            $('.fa-smile-wink').remove();
                        }
                        $('#likeAndMatch').append('<span><i class="fas fa-heartbeat" style="color: red; font-size: xx-large; margin-left: 10px"></i></span>');
                    }
                } else if (document.getElementById('pop' + info.me[0].id)) {
                    if ($('#liked'+info.me[0].id)) {
                        $('#liked'+info.me[0].id).remove();
                    }
                    $('#matched'+info.me[0].id).show();
                }
            }
        }
    });

    // socket.on('blocked', (info) => {
    //     console.log('i blocked', info);
    //
    //
    //     // for (var m = 0; m < info.blocked.length; m++) {
    //
    //
    //         if (info.messages.length !== 0) {
    //             var unread = 0;
    //             for (var k = 0; k < info.messages.length; k++) {
    //                 if (info.messages[k].from_user_id === info.me[0].id) {
    //                     if (info.messages[k].unread === 1) {
    //                         unread++;
    //                     }
    //                 }
    //             }
    //             decrementMsg(unread);
    //         }
    // });

    socket.on('unlikeMatch', (info) => {
        incrementNotif();
        unlikeNotif(info.me[0].username, info.me[0].id);
        if (document.getElementById('checkOnline')) {
            const getDetails = ' ' + info.me[0].username + ' (' + info.me[0].firstname + ' ' + info.me[0].lastname + ')';
            if (document.getElementById('userDetails').innerText === getDetails){
                if ($('.fa-smile-wink')) {
                    $('.fa-smile-wink').remove();
                }
            }
        } else if (document.getElementById('pop' + info.me[0].id)) {
            if ($('.fa-thumbs-up #oklikeSearch-'+info.me[0].id)) {
                $('#liked'+info.me[0].id).hide();
            }
        }

        for (var m = 0; m < info.unmatch.length; m++) {
            if (parseInt(info.unlike) === info.unmatch[m]) {
                incrementNotif();
                unmatchNotif(info.me[0].username, info.me[0].id);

                if (info.messages.length !== 0) {
                    var unread = 0;
                    for (var k = 0; k < info.messages.length; k++) {
                        if (info.messages[k].from_user_id === info.me[0].id) {
                            if (info.messages[k].unread === 1) {
                                unread++;
                            }
                        }
                    }
                    decrementMsg(unread);
                }

                if (msgForm) {
                    var inputHidden = document.getElementById('hiddenInput');
                    var myMatches = document.getElementsByClassName('chat_list');
                    if(inputHidden == null) {
                        const unmatchUser = document.querySelector('#chatOnline .user' + info.me[0].id);
                        const parent = unmatchUser.parentElement.parentElement.parentElement.parentElement.parentElement;
                        parent.remove();
                        if (myMatches.length === 0) {
                            const noMatch = document.createElement('div');
                            noMatch.setAttribute('class', 'noMatch');
                            const p = document.createElement('p');
                            p.innerText = 'Vous ne possédez aucun match...';
                            noMatch.append(p);
                            document.querySelector('.inbox_chat').append(noMatch);
                        }
                        return;
                    } else if (inputHidden && (parseInt(inputHidden.value) !== info.me[0].id)) {
                        const unmatchUser = document.querySelector('#chatOnline .user' + info.me[0].id);
                        const parent = unmatchUser.parentElement.parentElement.parentElement.parentElement.parentElement;
                        parent.remove();
                        return;
                    }
                } else if (document.getElementById('checkOnline')) {
                    const getDetails = ' ' + info.me[0].username + ' (' + info.me[0].firstname + ' ' + info.me[0].lastname + ')';
                    if (document.getElementById('userDetails').innerText === getDetails){
                        if ($('.fa-heartbeat')) {
                            $('.fa-heartbeat').remove();
                        }
                    }
                } else if (document.getElementById('pop' + info.me[0].id)) {
                    if ($('#liked'+info.me[0].id)) {
                        $('#liked'+info.me[0].id).remove();
                    }
                    $('#matched'+info.me[0].id).hide();
                }
            }
        }
    });


</script>

</body>
<footer></footer>
</html>